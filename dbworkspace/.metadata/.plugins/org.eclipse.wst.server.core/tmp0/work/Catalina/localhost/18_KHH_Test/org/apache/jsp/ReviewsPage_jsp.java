/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2025-01-13 03:41:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ReviewsPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/csj97/tomcat/lib/jstl-1.2.jar", Long.valueOf(1734052058125L));
    _jspx_dependants.put("jar:file:/C:/csj97/tomcat/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("/* 기본 스타일 */\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    font-family: 'Arial', 'Helvetica', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 컨테이너 스타일 */\r\n");
      out.write(".container {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    background-color: #f7f7f7;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 헤더 스타일 */\r\n");
      out.write(".header {\r\n");
      out.write("    height: 100px;\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    line-height: 100px;\r\n");
      out.write("    font-size: 2rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 네비게이션 바 스타일 */\r\n");
      out.write(".nav {\r\n");
      out.write("    height: 70px;\r\n");
      out.write("    background-color: #444;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    line-height: 70px;\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 콘텐츠 영역 */\r\n");
      out.write(".content {\r\n");
      out.write("    margin: 20px 20px;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 제목 */\r\n");
      out.write(".mypage h1 {\r\n");
      out.write("    font-size: 2.5rem;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 리뷰 목록 스타일 */\r\n");
      out.write(".review-list {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: flex-start;\r\n");
      out.write("    margin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".review-list h2 {\r\n");
      out.write("    font-size: 1.8rem;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 각 리뷰의 스타일 */\r\n");
      out.write(".review-comment {\r\n");
      out.write("    font-size: 1.2rem;\r\n");
      out.write("    font-weight: normal;\r\n");
      out.write("    color: #444;\r\n");
      out.write("    margin: 20px 0;\r\n");
      out.write("    line-height: 1.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 리뷰에 있는 링크 스타일 */\r\n");
      out.write(".review-comment a {\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".review-comment a:hover {\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 페이지 번호 */\r\n");
      out.write(".bottom-list-num {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin: 30px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bottom-list-num h2 {\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 푸터 스타일 */\r\n");
      out.write(".footer {\r\n");
      out.write("    height: 200px;\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    line-height: 200px;\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 구분선 */\r\n");
      out.write("hr {\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    margin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 추가적인 버튼 스타일 */\r\n");
      out.write("input[type=\"button\"] {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"button\"]:hover {\r\n");
      out.write("    background-color: #555;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"header\">header</div>\r\n");
      out.write("		<div class=\"nav\">nav</div>\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"mypage\" style=\"border: none;\">\r\n");
      out.write("				<h1>MyPage  (누르면 마이페이지 메인으로 이동)</h1>\r\n");
      out.write("			</div>\r\n");
      out.write("		<br>\r\n");
      out.write("			<hr>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"review-list\" style=\"border: none;\">\r\n");
      out.write("				<h2 style=\"margin-inline-end: auto;\">작성한 맛리뷰</h2>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"review-comment\" style=\"border: none;\">\r\n");
      out.write("				<span>🦀🍴</span> [ 맛리뷰 예시 ] 가게명 / 제목 or 텍스트 일부 / 게시일\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		<hr>\r\n");
      out.write("			<div class=\"review-comment\" style=\"border: none;\">\r\n");
      out.write("				<span>🦀🍴</span> \r\n");
      out.write("				<a href=\"https://kr.savorjapan.com/contents/discover-oishii-japan/if-you-re-looking-for-a-good-drink-in-shinjuku-these-are-the-places-to-be-10-izakaya/\"> 홋카이도넘버원 (北海道ナンバーワン) | 찾았습니다. 존맛탱 홍게집....! 홍게 속살이 꽉\r\n");
      out.write("				차있는 숨은 골목 .. | 2025.01.10</a>\r\n");
      out.write("				<!-- 글주소 (편집 가능한)  -->\r\n");
      out.write("			</div>\r\n");
      out.write("					<hr>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"review-comment\" style=\"border: none;\">\r\n");
      out.write("				<span>🦀🍴</span> 우유빙수 (ミルクかき氷) | 산처럼 쌓인 우유 빙수가 인상적인 디저트 맛집입니다. 만족만족\r\n");
      out.write("				대만족! | 2025.01.10\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		<hr>\r\n");
      out.write("			<div class=\"review-comment\" style=\"border: none;\">\r\n");
      out.write("				<span>🦀🍴</span> 우유빙수 (ミルクかき氷) | 산처럼 쌓인 우유 빙수가 인상적인 디저트 맛집입니다. 만족만족\r\n");
      out.write("				대만족! | 2025.01.10\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<!--  글리스트 넘길수있게  -->\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("			<br> <br>\r\n");
      out.write("			<div class=\"bottom-list-num\" style=\"border: none;\">  <h2> 1 2 3 4 (나중에 구현) > </h2>   </div>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"footer\">footer</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
